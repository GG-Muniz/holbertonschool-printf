.TH _PRINTF 3 "March 28, 2024" "Holberton School of Coding San Juan Puerto Rico" "Printf Formating Manual"

.SH NAME
_printf - formatted output conversion

.SH SYNOPSIS
.B #include "main.h"
.PP
.B int _printf(const char *format, ...);

.SH DESCRIPTION
The \fB_printf()\fR function produces output according to a certain specifiers of a format string - c, s, %, d, i & b.
.PP
The function writes the output to the standard output stream (stdout).
.PP
The \fIformat\fR string is composed of zero or more directives: ordinary characters (not %), which are copied unchanged to the output stream; and conversion specifications, each of which results in fetching zero or more subsequent arguments.
.SH RETURN VALUE
Upon successful return, this function returns the number of characters printed (excluding the null byte used to end output to strings).
.PP
If an output error is encountered, a negative value is returned.

.SH FORMAT SPECIFIERS
The format string may contain special character sequences called conversion specifiers, which begin with the character % and are followed by a character that determines the type of conversion to be performed.
.PP

The following conversion specifiers are supported:
.TP

.B %c
Prints a single character. The argument is converted to an unsigned char.
.TP

.B %s
Prints a string. The argument should be a pointer to an array of characters. Characters from the array are written up to (but not including) a terminating null byte.
.TP

.B %%
Prints a single % character. No argument is converted.
.TP

.B %d, %i
The \fIint\fR argument is converted to signed decimal notation.
.TP

.B %b
The \fIunsigned int\fR argument is converted to binary notation.

.SH EXAMPLES
Basic usage of _printf:
.PP
.nf
.RS

#include "main.h"
int main(void)
{
_printf("Hello, %s!\n", "world");
_printf("The character is %c\n", 'X');
_printf("Percent sign: %%\n");
_printf("Decimal: %d\n", 1234);
_printf("Integer: %i\n", -5678);
_printf("Binary: %b\n", 98);
return (0);
}
.RE
.fi
.PP
Output:
.PP
.nf
.RS
Hello, world!
The character is X
Percent sign: %
Decimal: 1234
Integer: -5678
Binary: 1100010
.RE
.fi
.SH NOTES
This implementation of printf supports a limited set of format specifiers compared to the standard library printf:
.PP

It only supports %c, %s, %%, %d, %i, and %b format specifiers
It does not handle flag characters
It does not handle field width
It does not handle precision
It does not handle length modifiers
.PP
Attempting to use unsupported format specifiers will result in undefined behavior.
.SH SEE ALSO
.BR printf (3),
.BR fprintf (3),
.BR sprintf (3)
.SH AUTHOR
This implementation of printf was created by Gabriel Garcia Muniz & Marivellisse Garcia - Holberton Students.

